Domanda 1 -> Qual è il comando per clonare un repository?

Risposta  -> 	Il comando per clonare è git clone. Però cosa fa?
	     	1) Git clone consente di creare una copia locale di un repository
	     	Remoto.
	     	Con questo comando otteniamo anche la storia di versionamento quali:
	     	commit, branch e tag ( ecc…)
	
		2) git ci crea una nuova directory nel nostro computer con il nome del repository
		e ci riversa, oltre allo stesso contenuto, anche file di configurazione e la struttura del 
		Progetto.

		3) Imposta il repository remoto come "origin", cioè il remoto predefinito che punterà al
		repository da dove è stato clonato.
		Ciò consente di effettuare operazioni di sincronizzazioni, esempio "git pull".

		
Domanda 2 -> Come si crea un commit in git?

Risposta  ->	1) Per creare un commit dobbiamo per prima cosa fare lo staging.
		Possiamo ottenere questo primo passaggio tramite il comando "git add esempio.txt" oppure "git add."
		il punto ( . ) passato dopo add permette di aggiungere tutti I file modificati nella directory corrente
		e nelle sue sotto-directory.
		
		2) Aggiunto il file desiderato nell'area di staging è possibile effettuare il commit con "git commit"
		dove poi inseriremo ( -m da riga di comando o da gui client) un messaggio descrittivo che spieghi le modifiche.

Domanda 3 -> Qual è la differenza tra git pull e fetch?

Risposta  -> 	git pull combina in un unico comando due operazioni: prendere e scaricare I cambiamenti dal repo remoto ( come git fetch) 
		per poi integrare I cambiamenti nel branch locale.
		Internamente git pull esegue una fetch seguita da merge o rebase.

		git fetch recupera I cambiamenti avvenuti nel repository remoto ma non li integra automaticamente nel repository locale.
		Git fetch recupera e memorizza ( nel nostro repo locale) questi cambiamenti come rami remote ( origin/main per esempio).
		Il tutto non va a cambiare nulla nella working directory ne nella branch corrente.
		Quindi permette di guardare I cambiamenti prima di decidere se integrarli.

		

